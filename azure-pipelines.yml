# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  repoDir: repo
  repoBranch: master
  repoUrl: https://github.com/favoyang/unity-package-example-subtree.git
  packageName: com.namespace.unitypackageexample-subtree

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo repoDir: $REPODIR
    echo repoBranch: $REPOBRANCH
    echo repoUrl: $REPOURL
    echo packageName: $PACKAGENAME
    [[ -z "$REPODIR" ]] && echo '$REPODIR not found' && exit 1
    [[ -z "$REPOBRANCH" ]] && echo '$REPOBRANCH not found' && exit 1
    [[ -z "$REPOURL" ]] && echo '$REPOURL not found' && exit 1
    [[ -z "$PACKAGENAME" ]] && echo '$PACKAGENAME not found' && exit 1
    exit 0
  displayName: 'Print environment'

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: install
  displayName: 'Install dependencies'

- script: |
    git clone --depth 1 --branch $(repoBranch) $(repoUrl) $(repoDir)
    cd $(repoDir)
  displayName: 'Clone $(repoDir) repository'

- script: |
    PACKAGEFOLDER=`node findPackage.js $(packageName)1 $(repoDir)`
    if [[ -z "$PACKAGEFOLDER" ]]; then
      echo "WARN: no valid package.json found, fallback to $(repoDir)"
      PACKAGEFOLDER=$(repoDir)
    fi
    echo PACKAGEFOLDER: $PACKAGEFOLDER
    echo "##vso[task.setvariable variable=packageFolder;]$PACKAGEFOLDER"
  displayName: 'Detect $(packageFolder)'

# - task: Npm@1
#   inputs:
#      command: publish
#      workingDir: $(repoDir)
#      publishRegistry: useExternalRegistry
#      publishEndpoint: openupm
#   displayName: 'Publish to OpenUPM'
